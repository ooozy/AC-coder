class Solution:
    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:
        nums.sort()
        lens = len(nums)
        if lens<4:
            return []
        a = 0
        alen = lens - 3
        blen = lens - 2
        ans = list()
        while a<alen:
            b = a + 1
            while b<blen:
                while b>a+1 and b<blen and nums[b]==nums[b-1]:
                    b += 1
                if b==blen:
                    break
                c = b+1
                d = lens-1
                while c<d:
                    s = nums[a]+nums[b]+nums[c]+nums[d]
                    if s<target:
                        c += 1
                    elif s == target:
                        ans.append([nums[a],nums[b],nums[c],nums[d]])
                        c += 1
                        d -= 1
                        while c<d and nums[c]==nums[c-1]:
                            c += 1
                        while c<d and nums[d]==nums[d+1]:
                            d -= 1
                    else:
                        d -= 1
                b += 1
                while b<blen and nums[b]==nums[b-1]:
                    b += 1
            a += 1
            while a<alen and nums[a]==nums[a-1]:
                a += 1
                
        return ans
                
